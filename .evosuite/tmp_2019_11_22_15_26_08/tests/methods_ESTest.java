/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 22 21:26:46 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class methods_ESTest extends methods_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      methods methods0 = new methods();
      String string0 = methods0.isFiveCharacters("");
      assertEquals("False", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      methods methods0 = new methods();
      int int0 = methods0.min((-2222), 0);
      assertEquals((-2222), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      methods methods0 = new methods();
      int int0 = methods0.min(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      methods methods0 = new methods();
      // Undeclared exception!
      try { 
        methods0.isFiveCharacters((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("methods", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      methods methods0 = new methods();
      String string0 = methods0.isFiveCharacters("False");
      assertEquals("False", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      methods methods0 = new methods();
      String string0 = methods0.isFiveCharacters("6c'IqnAXfxW_^jY:(");
      assertEquals("False", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      methods methods0 = new methods();
      int int0 = methods0.min((-1), (-463));
      assertEquals((-463), int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      methods methods0 = new methods();
      int int0 = methods0.min(5, 5);
      assertEquals(5, int0);
  }
}
