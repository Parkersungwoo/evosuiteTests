/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 17:29:29 GMT 2019
 */

package ezcomp;

import org.junit.Test;
import static org.junit.Assert.*;
import ezcomp.MultiNumberHolder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MultiNumberHolder_ESTest extends MultiNumberHolder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MultiNumberHolder multiNumberHolder0 = new MultiNumberHolder();
      assertEquals(2, (int)multiNumberHolder0.getNumber2());
      
      multiNumberHolder0.setNumber2((Integer) null);
      multiNumberHolder0.getNumber2();
      assertEquals(1, (int)multiNumberHolder0.getNumber1());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MultiNumberHolder multiNumberHolder0 = new MultiNumberHolder();
      assertEquals(2, (int)multiNumberHolder0.getNumber2());
      
      Integer integer0 = new Integer((-1160));
      multiNumberHolder0.setNumber2(integer0);
      multiNumberHolder0.getNumber2();
      assertEquals(1, (int)multiNumberHolder0.getNumber1());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MultiNumberHolder multiNumberHolder0 = new MultiNumberHolder();
      assertEquals(2, (int)multiNumberHolder0.getNumber2());
      
      Integer integer0 = new Integer(0);
      multiNumberHolder0.setNumber2(integer0);
      multiNumberHolder0.getNumber2();
      assertEquals(1, (int)multiNumberHolder0.getNumber1());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MultiNumberHolder multiNumberHolder0 = new MultiNumberHolder();
      assertEquals(2, (int)multiNumberHolder0.getNumber2());
      
      Integer integer0 = new Integer(2028);
      multiNumberHolder0.setNumber2(integer0);
      multiNumberHolder0.getNumber2();
      assertEquals(1, (int)multiNumberHolder0.getNumber1());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MultiNumberHolder multiNumberHolder0 = new MultiNumberHolder();
      assertEquals(1, (int)multiNumberHolder0.getNumber1());
      
      multiNumberHolder0.setNumber1((Integer) null);
      multiNumberHolder0.getNumber1();
      assertEquals(2, (int)multiNumberHolder0.getNumber2());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MultiNumberHolder multiNumberHolder0 = new MultiNumberHolder();
      assertEquals(1, (int)multiNumberHolder0.getNumber1());
      
      Integer integer0 = new Integer(0);
      multiNumberHolder0.setNumber1(integer0);
      multiNumberHolder0.getNumber1();
      assertEquals(2, (int)multiNumberHolder0.getNumber2());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MultiNumberHolder multiNumberHolder0 = new MultiNumberHolder();
      assertEquals(1, (int)multiNumberHolder0.getNumber1());
      
      Integer integer0 = new Integer((-1));
      multiNumberHolder0.setNumber1(integer0);
      multiNumberHolder0.getNumber1();
      assertEquals(2, (int)multiNumberHolder0.getNumber2());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MultiNumberHolder multiNumberHolder0 = new MultiNumberHolder();
      Integer integer0 = multiNumberHolder0.getNumber1();
      assertEquals(2, (int)multiNumberHolder0.getNumber2());
      assertEquals(1, (int)integer0);
  }
}
