/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 17:18:11 GMT 2019
 */

package basicajax;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import basicajax.HideNShow;
import javax.faces.component.UIInput;
import javax.faces.component.UISelectOne;
import javax.faces.event.ActionEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HideNShow_ESTest extends HideNShow_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HideNShow hideNShow0 = new HideNShow();
      hideNShow0.render = null;
      Boolean boolean0 = hideNShow0.getRender();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HideNShow hideNShow0 = new HideNShow();
      hideNShow0.render = null;
      UISelectOne uISelectOne0 = new UISelectOne();
      ActionEvent actionEvent0 = new ActionEvent(uISelectOne0);
      // Undeclared exception!
      try { 
        hideNShow0.toggle(actionEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("basicajax.HideNShow", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HideNShow hideNShow0 = new HideNShow();
      UIInput uIInput0 = new UIInput();
      ActionEvent actionEvent0 = new ActionEvent(uIInput0);
      hideNShow0.toggle(actionEvent0);
      hideNShow0.toggle(actionEvent0);
      hideNShow0.toggle(actionEvent0);
      hideNShow0.getRender();
      assertTrue(hideNShow0.getRender());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HideNShow hideNShow0 = new HideNShow();
      Boolean boolean0 = hideNShow0.getRender();
      assertFalse(boolean0);
  }
}
