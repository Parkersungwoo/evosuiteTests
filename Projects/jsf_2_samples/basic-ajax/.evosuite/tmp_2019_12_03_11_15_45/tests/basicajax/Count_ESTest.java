/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 03 17:20:41 GMT 2019
 */

package basicajax;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import basicajax.Count;
import javax.faces.event.ActionEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Count_ESTest extends Count_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Count count0 = new Count();
      count0.count = null;
      // Undeclared exception!
      try { 
        count0.getCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("basicajax.Count", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Count count0 = new Count();
      ActionEvent actionEvent0 = mock(ActionEvent.class, new ViolatedAssumptionAnswer());
      count0.reset(actionEvent0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Count count0 = new Count();
      count0.getCount();
      Integer integer0 = count0.getCount();
      assertEquals(1, (int)integer0);
  }
}
